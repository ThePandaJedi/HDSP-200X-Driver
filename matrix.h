/***** 5x7 ASCII character data *****

Written By Matthew Haahr

Defined Column Wise
Columns are created from top (LSB is bottom, MSB is not on display)

ASCII CHAR ASCII CHAR ASCII CHAR ASCII CHAR ASCII CHAR ASCII CHAR
0x20       0x30  0    0x40  @    0x50  P    0x60  `    0x70  p
0x21  !    0x31  1    0x41  A    0x51  Q    0x61  a    0x71  q
0x22  "    0x32  2    0x42  B    0x52  R    0x62  b    0x72  r
0x23  #    0x33  3    0x43  C    0x53  S    0x63  c    0x73  s
0x24  $    0x34  4    0x44  D    0x54  T    0x64  d    0x74  t
0x25  %    0x35  5    0x45  E    0x55  U    0x65  e    0x75  u
0x26  &    0x36  6    0x46  F    0x56  V    0x66  f    0x76  v
0x27  '    0x37  7    0x47  G    0x57  W    0x67  g    0x77  w
0x28  (    0x38  8    0x48  H    0x58  X    0x68  h    0x78  x
0x29  )    0x39  9    0x49  I    0x59  Y    0x69  i    0x79  y
0x2A  *    0x3A  :    0x4A  J    0x5A  Z    0x6A  j    0x7A  z
0x2B  +    0x3B  ;    0x4B  K    0x5B  [    0x6B  k    0x7B  {
0x2C  ,    0x3C  <    0x4C  L    0x5C  \    0x6C  l    0x7C  |
0x2D  -    0x3D  =    0x4D  M    0x5D  ]    0x6D  m    0x7D  }
0x2E  .    0x3E  >    0x4E  N    0x5E  ^    0x6E  n    0x7E  ~
0x2F  /    0x3F  ?    0x4F  O    0x5F  _    0x6F  o    

*/

#include <Arduino.h>
#ifndef MATRIX_h
#define MATRIX_h
 
static const unsigned char char_data[95][5] PROGMEM  = 
{ 
 
  {  0x00,  0x00,  0x00,  0x00,  0x00}, //  space

  {  0x00,  0x00,  0x7D,  0x00,  0x00}, // !

  {  0x00,  0x60,  0x00,  0x60,  0x00}, // "

  {  0x14,  0x3E,  0x14,  0x3E,  0x14}, // #

  {  0x12,  0x2A,  0x7F,  0x2A,  0x24}, // $

  {  0x62,  0x64,  0x08,  0x13,  0x23}, // %

  {  0x06,  0x79,  0x55,  0x63,  0x06}, // &

  {  0x00,  0x00,  0x60,  0x00,  0x00}, // '

  {  0x00,  0x00,  0x1C,  0x22,  0x41}, // (

  {  0x41,  0x22,  0x1C,  0x00,  0x00}, // )

  {  0x1C,  0x08,  0x3E,  0x08,  0x1C}, // *

  {  0x08,  0x08,  0x3E,  0x08,  0x08}, // +

  {  0x00,  0x00,  0x01,  0x02,  0x00}, // ,

  {  0x00,  0x08,  0x08,  0x08,  0x00}, // -

  {  0x00,  0x00,  0x03,  0x03,  0x00}, // .

  {  0x02,  0x04,  0x08,  0x10,  0x20}, // /

  {  0x3E,  0x45,  0x49,  0x51,  0x3E}, // 0

  {  0x01,  0x21,  0x7F,  0x01,  0x01}, // 1

  {  0x23,  0x45,  0x49,  0x49,  0x31}, // 2

  {  0x22,  0x41,  0x49,  0x49,  0x36}, // 3

  {  0x78,  0x08,  0x08,  0x08,  0x3F}, // 4

  {  0x7A,  0x49,  0x49,  0x49,  0x46}, // 5

  {  0x3E,  0x49,  0x49,  0x49,  0x26}, // 6

  {  0x40,  0x40,  0x47,  0x48,  0x70}, // 7

  {  0x36,  0x49,  0x49,  0x49,  0x36}, // 8

  {  0x30,  0x48,  0x48,  0x48,  0x3F}, // 9

  {  0x00,  0x00,  0x36,  0x00,  0x00}, // :

  {  0x00,  0x01,  0x1A,  0x00,  0x00}, // ;

  {  0x00,  0x08,  0x14,  0x22,  0x41}, // <

  {  0x14,  0x14,  0x14,  0x14,  0x14}, // =

  {  0x41,  0x22,  0x14,  0x08,  0x00}, // >

  {  0x20,  0x40,  0x4D,  0x50,  0x20}, // ?

  {  0x3E,  0x41,  0x5D,  0x45,  0x3D}, // @

  {  0x1F,  0x24,  0x44,  0x24,  0x1F}, // A

  {  0x7F,  0x49,  0x49,  0x49,  0x36}, // B

  {  0x3E,  0x41,  0x41,  0x41,  0x22}, // C

  {  0x7F,  0x41,  0x41,  0x41,  0x3E}, // D

  {  0x7F,  0x49,  0x49,  0x41,  0x41}, // E

  {  0x7F,  0x48,  0x48,  0x40,  0x40}, // F

  {  0x3E,  0x41,  0x49,  0x49,  0x2E}, // G

  {  0x7F,  0x08,  0x08,  0x08,  0x7F}, // H

  {  0x41,  0x41,  0x7F,  0x41,  0x41}, // I

  {  0x42,  0x41,  0x41,  0x7E,  0x40}, // J

  {  0x7F,  0x08,  0x14,  0x22,  0x41}, // K

  {  0x7F,  0x01,  0x01,  0x01,  0x01}, // L

  {  0x7F,  0x20,  0x10,  0x20,  0x7F}, // M

  {  0x7F,  0x10,  0x08,  0x04,  0x7F}, // N

  {  0x3E,  0x41,  0x41,  0x41,  0x3E}, // O

  {  0x7F,  0x48,  0x48,  0x48,  0x30}, // P

  {  0x3E,  0x41,  0x45,  0x42,  0x3D}, // Q

  {  0x7F,  0x48,  0x4C,  0x4A,  0x31}, // R

  {  0x32,  0x49,  0x49,  0x49,  0x26}, // S

  {  0x40,  0x40,  0x7F,  0x40,  0x40}, // T

  {  0x7E,  0x01,  0x01,  0x01,  0x7E}, // U

  {  0x7C,  0x02,  0x01,  0x02,  0x7C}, // V

  {  0x7F,  0x02,  0x04,  0x02,  0x7F}, // W

  {  0x63,  0x14,  0x08,  0x14,  0x63}, // X

  {  0x60,  0x10,  0x0F,  0x10,  0x60}, // Y

  {  0x63,  0x45,  0x49,  0x51,  0x63}, // Z

  {  0x00,  0x7F,  0x41,  0x41,  0x00}, // [

  {  0x20,  0x10,  0x08,  0x04,  0x02}, // \

  {  0x00,  0x41,  0x41,  0x7F,  0x00}, // ]

  {  0x10,  0x20,  0x40,  0x20,  0x10}, // ^

  {  0x01,  0x01,  0x01,  0x01,  0x01}, // _

  {  0x00,  0x40,  0x20,  0x00,  0x00}, // `

  {  0x06,  0x09,  0x09,  0x06,  0x01}, // a

  {  0x3F,  0x09,  0x09,  0x09,  0x06}, // b

  {  0x06,  0x09,  0x09,  0x09,  0x09}, // c

  {  0x06,  0x09,  0x09,  0x09,  0x3F}, // d

  {  0x0E,  0x15,  0x15,  0x15,  0x09}, // e

  {  0x08,  0x3F,  0x48,  0x48,  0x20}, // f

  {  0x18,  0x25,  0x25,  0x25,  0x1E}, // g

  {  0x3F,  0x08,  0x08,  0x08,  0x07}, // h

  {  0x00,  0x00,  0x17,  0x00,  0x00}, // i

  {  0x02,  0x01,  0x01,  0x3E,  0x00}, // j

  {  0x1F,  0x04,  0x0C,  0x12,  0x01}, // k

  {  0x00,  0x3F,  0x00,  0x00,  0x00}, // l

  {  0x0F,  0x04,  0x02,  0x04,  0x0F}, // m

  {  0x0F,  0x04,  0x08,  0x08,  0x07}, // n

  {  0x06,  0x09,  0x09,  0x09,  0x06}, // o

  {  0x00,  0x3F,  0x24,  0x24,  0x18}, // p

  {  0x10,  0x28,  0x28,  0x2E,  0x11}, // q

  {  0x00,  0x1F,  0x08,  0x08,  0x00}, // r

  {  0x00,  0x09,  0x15,  0x15,  0x12}, // s

  {  0x00,  0x08,  0x1F,  0x08,  0x00}, // t

  {  0x0E,  0x01,  0x01,  0x01,  0x0E}, // u

  {  0x0C,  0x02,  0x01,  0x02,  0x0C}, // v

  {  0x0F,  0x02,  0x04,  0x02,  0x0F}, // w

  {  0x11,  0x0A,  0x04,  0x0A,  0x11}, // x

  {  0x10,  0x08,  0x07,  0x08,  0x10}, // y

  {  0x11,  0x13,  0x15,  0x19,  0x11}, // z

  {  0x08,  0x36,  0x41,  0x41,  0x00}, // {

  {  0x00,  0x00,  0x7F,  0x00,  0x00}, // |

  {  0x00,  0x41,  0x41,  0x36,  0x08}, // }

  {  0x10,  0x20,  0x10,  0x20,  0x10} // ~
 
};

#endif
